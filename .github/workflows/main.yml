name: Mod SDCard
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      bootloader:
        description: "Select Bootloader Type"
        required: false
        default: "b860h"
        type: choice
        options:
          - b860h
          - hg680p
      firmware:
        description: "Insert Firmware url (wget)"
        required: true
        default: ""

env:
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p openwrt
        sudo chown $USER:$GROUPS openwrt
        
    - name: Download Firmware
      run: |
        url="${{ github.event.inputs.firmware }}"
        filename="${url##*/}"
        if [[ "$filename" == *.gz ]]; then
            ext="img.gz"
        elif [[ "$filename" == *.xz ]]; then
            ext="img.xz"
        else
            echo "Ekstensi tidak dikenali"
            exit 1
        fi
        sudo wget --no-check-certificate "$url" -O "openwrt/firmware.$ext" > /dev/null 2>&1
        echo "file_type=$ext" >> $GITHUB_ENV
        
    - name: Extract firmware
      id: extract
      run: |
        sudo cp -R BootCardMaker/uboot_HG680P.bin openwrt/
        sudo mkdir -p openwrt/mod-sdcard
        sudo cp -R extlinux openwrt/mod-sdcard/
        sudo cp -R boot.ini openwrt/mod-sdcard/
        sudo cp -R aml_autoscript openwrt/mod-sdcard/
        sudo cp -R aml_autoscript.scr openwrt/mod-sdcard/
        sudo tar -czvf openwrt/mod-sdcard.tar.gz -C openwrt/mod-sdcard/ .
        cd openwrt
        sudo mkdir -p boot
        if [ ${{ env.file_type }} = "img.gz" ]; then
          sudo gunzip firmware.img.gz
        else
          sudo unxz firmware.img.xz
        fi
        device=$(sudo losetup -fP --show firmware.img)
        sudo mount ${device}p1 boot
        cd boot && sudo tar -xzvf openwrt/mod-sdcard.tar.gz)
        echo -e "Patching extlinux.conf"
        uenv=$(sudo cat openwrt/boot/uEnv.txt | grep APPEND | awk -F "root=" '{print $2}')
        extlinux=$(sudo cat openwrt/boot/extlinux/extlinux.conf | grep APPEND | awk -F "root=" '{print $2}')
        sudo sed -i "s/$extlinux/$uenv/g" openwrt/boot/extlinux/extlinux.conf
        sleep 1
        echo -e "Patching boot.ini"
        if [ ${{ github.event.inputs.bootloader }} = "b860h" ]; then
          dtb="meson-gxl-s905x-b860h.dtb"
        elif [ ${{ github.event.inputs.bootloader }} = "hg680p" ]; then
          dtb="meson-gxl-s905x-p212.dtb"
        fi
        boot=$(sudo cat openwrt/boot/boot.ini | grep dtb | awk -F "/" '{print $4}' | cut -d'"' -f1)
        sudo sed -i "s/$boot/$dtb/g" openwrt/boot/boot.ini
        sudo sed -i "s/$boot/$dtb/g" openwrt/boot/extlinux/extlinux.conf
        sudo umount ${device}p1
        sleep 1
        echo -e "Adding Amlogic Bootloader"
        sudo dd if=u-boot.bin of=${device} bs=1 count=444 conv=fsync 2>/dev/null
        sudo dd if=u-boot.bin of=${device} bs=512 skip=1 seek=1 conv=fsync 2>/dev/null
        sudo losetup -d ${device}
        echo -e "Patching Success"
        sleep 1
        sudo mv openwrt/boot/u-boot-s905x-s912.bin /workdir/openwrt/boot/u-boot.ext
        sleep 1
        echo -e "Compress file img"
        if [ ${{ env.file_type }} = "img.gz" ]; then
          sudo gzip firmware.img
        else
          sudo xz firmware.img
        fi
        echo -e "Compress Success"
        echo "FIRMWARE=$PWD/firmware.${{ env.file_type }}" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware
      uses: actions/upload-artifact@main
      if: steps.extract.outputs.status == 'success'
      with:
        name: firmware-${{ github.event.inputs.bootloader }}
        path: ${{ env.FIRMWARE }}
