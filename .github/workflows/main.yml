#==========================================================================
# Copyright (C) 2024 Chewy Mage 
# https://github.com/Haris131/boot-mod-sdcard
#==========================================================================

name: Boot mod sdcard

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      type_dtb:
        description: "Select type file"
        required: false
        default: "b860h"
        type: choice
        options:
          - b860h
          - hg680p
      img_url:
        description: "Set the url img file"
        required: true
        default: ""

env:
  TZ: Asia/Jakarta

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        PWD=$(pwd)
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -y install wget python3
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo pip3 install gdown
        sudo pip3 install git+https://github.com/Juvenal-Yescas/mediafire-dl
        wget https://mega.nz/linux/repo/xUbuntu_20.04/amd64/megacmd-xUbuntu_20.04_amd64.deb && sudo apt install "$PWD/megacmd-xUbuntu_20.04_amd64.deb"
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p openwrt

    - name: Get extension
      id: get_extension
      run: |
        filename=$(basename "${{ github.event.inputs.img_url }}")
        if [[ "$filename" =~ \.([^.]+\.[^.]+)$ ]]; then
          full_extension="${BASH_REMATCH[1]}"
         else
          full_extension="${filename##*.}"
        fi
        echo "Ekstensi lengkap file adalah: $full_extension"
        echo "file_type=$full_extension" >> $GITHUB_ENV

    - name: Download Firmware
      run: |
        if [ $(echo ${{ github.event.inputs.img_url }} | grep "drive.") ]; then
          if [ $(echo ${{ github.event.inputs.img_url }} | awk -F "/" '{print $6}') ]; then
            link_gdrive=$(echo ${{ github.event.inputs.img_url }} | awk -F "/" '{print $6}')
          else
            link_gdrive=$(echo ${{ github.event.inputs.img_url }} | awk -F "/" '{print $4}' | awk -F "?id=" '{print $2}'|awk -F "&export" '{print $1}')
          fi
          sudo gdown ${link_gdrive} -O openwrt/firmware.${{ env.file_type }}
        else
          if [ $(echo ${{ github.event.inputs.img_url }} | grep "mediafire.com") ]; then
            sudo mediafire-dl ${{ github.event.inputs.img_url }} -o openwrt/firmware.${{ env.file_type }}
          else
            if [ $(echo ${{ github.event.inputs.img_url }} | grep "mega.nz") ]; then
              file_mega=$(sudo mega-get ${{ github.event.inputs.img_url }} | awk -F: '{print $2}')
              sudo mv ${file_mega} openwrt/firmware.${{ env.file_type }}
            else
              sudo wget --no-check-certificate ${{ github.event.inputs.img_url }} -O openwrt/firmware.${{ env.file_type }}
            fi
          fi
        fi
        
    - name: Extract firmware
      id: extract
      run: |
        sudo mkdir -p openwrt/boot
        sudo mv BootCardMaker/u-boot.bin openwrt/
        sudo mv files/mod-boot-sdcard.tar.gz openwrt/
        cd openwrt
        if [ ${{ env.file_type }} = "img.gz" ]; then
          sudo gunzip firmware.img.gz
        else
          sudo unxz firmware.img.xz
        fi
        device=$(sudo losetup -fP --show firmware.img)
        sudo mount ${device}p1 boot
        sudo tar -xzvf mod-boot-sdcard.tar.gz -C boot
        echo -e "Patching extlinux.conf"
        uenv=$(sudo cat boot/uEnv.txt | grep APPEND | awk -F "root=" '{print $2}')
        extlinux=$(sudo cat boot/extlinux/extlinux.conf | grep append | awk -F "root=" '{print $2}')
        sudo sed -i "s|$extlinux|$uenv|g" boot/extlinux/extlinux.conf
        sleep 1
        echo -e "Patching boot.ini"
        if [ ${{ github.event.inputs.type_dtb }} = "b860h" ]; then
          dtb="meson-gxl-s905x-b860h.dtb"
        elif [ ${{ github.event.inputs.type_dtb }} = "hg680p" ]; then
          dtb="meson-gxl-s905x-p212.dtb"
        fi
        boot=$(sudo cat boot/boot.ini | grep dtb | awk -F "/" '{print $4}' | cut -d'"' -f1)
        sudo sed -i "s/$boot/$dtb/g" boot/boot.ini
        sudo sed -i "s/$boot/$dtb/g" boot/extlinux/extlinux.conf
        sudo umount ${device}p1
        sleep 1
        echo -e "Adding Amlogic Bootloader"
        sudo dd if=u-boot.bin of=${device} bs=1 count=444 conv=fsync 2>/dev/null
        sudo dd if=u-boot.bin of=${device} bs=512 skip=1 seek=1 conv=fsync 2>/dev/null
        sudo losetup -d ${device}
        echo -e "Patching Success"
        sleep 1
        echo -e "Compress file img"
        if [ ${{ env.file_type }} = "img.gz" ]; then
          sudo gzip firmware.img
        else
          sudo xz firmware.img
        fi
        echo -e "Compress Success"
        echo "FIRMWARE=$PWD/firmware.${{ env.file_type }}" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware
      uses: actions/upload-artifact@main
      if: steps.extract.outputs.status == 'success'
      with:
        name: firmware-${{ github.event.inputs.type_dtb }}
        path: ${{ env.FIRMWARE }}
